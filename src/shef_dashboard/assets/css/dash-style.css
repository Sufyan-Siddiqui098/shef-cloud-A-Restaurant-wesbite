@import '/src/colors.css';

/******** GENERAL CSS *******/
input,
textarea,
select {
    font-size: 14px;
    width: 100%;
    border: 1px solid var(--headGray);
    border-radius: 5px;
    height: 45px;
    padding: 4px 12px;
}

input:focus,
textarea:focus,
select:focus {
    border: 1px solid var(--primary);
}

input[type='text']::placeholder,
input::placeholder {
    color: #8b8b8b;
}


select {
    background: url("data:image/svg+xml,<svg height='10px' width='10px' viewBox='0 0 16 16' fill='%23000000' xmlns='http://www.w3.org/2000/svg'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>") no-repeat;
    background-position: calc(100% - 1rem) center !important;
    -moz-appearance: none !important;
    -webkit-appearance: none !important;
    appearance: none !important;
    padding-right: 2rem !important;
}

.shefBtnBorder {
    border: 1px solid var(--primaryDark);
    padding: 4px 22px;
    border-radius: 6px;
    font-weight: 600;
    font-size: 16px;
    text-transform: uppercase;
    color: var(--primaryDark);
}

table.menuTable th,
table.menuTable td {
    border: none;
    padding: 15px;
}

.stepFormTitle {
    font-size: 16px;
    font-weight: 500;
    /* cursor: pointer; */
    opacity: 0.5;
    transition: opacity 0.3s ease-in-out;
}

.stepFormTitle.active {
    opacity: 1;
    font-weight: 600;
    color: var(--primaryDark);
}

.stepFormTitles .stepFormTitle:nth-last-child(1) svg {
    display: none;
}

.stepFormActiveBtn {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 20px 2px;
    border: 1px solid #e7e9eb;
    border-radius: 7px;
    cursor: pointer;
}

.stepFormActiveBtn.active {
    background: var(--greenLight);
    border: 1px solid var(--primaryGreen);
}

.stepFormActiveBtn.active h4 {
    color: var(--secondary);
}

.formSwitch {
    position: relative;
    display: block;
    width: 100px;
    height: 30px;
    padding: 3px;
    /* margin: 0 10px 10px 0; */
    /* background: linear-gradient(to bottom, #eeeeee, #FFFFFF 25px); */
    /* background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF 25px); */
    border-radius: 18px;
    /* box-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05); */
    cursor: pointer;
}

.formSwitch-input {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
}

.formSwitch-label {
    position: relative;
    display: block;
    height: inherit;
    font-size: 10px;
    text-transform: uppercase;
    background: #eceeef;
    border-radius: inherit;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);
}

.formSwitch-label:before,
.formSwitch-label:after {
    position: absolute;
    top: 50%;
    margin-top: -.5em;
    line-height: 1;
    -webkit-transition: inherit;
    -moz-transition: inherit;
    -o-transition: inherit;
    transition: inherit;
}

.formSwitch-label:before {
    content: attr(data-off);
    right: 11px;
    color: #aaaaaa;
    text-shadow: 0 1px rgba(255, 255, 255, 0.5);
}

.formSwitch-label:after {
    content: attr(data-on);
    left: 11px;
    color: #FFFFFF;
    text-shadow: 0 1px rgba(0, 0, 0, 0.2);
    opacity: 0;
}

.formSwitch-input:checked~.formSwitch .formSwitch-label {
    background: var(--primaryDark);
    border-color: var(--primaryDark);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2);
}

.formSwitch-input:checked~.formSwitch .formSwitch-label:before {
    opacity: 0;
}

.formSwitch-input:checked~.formSwitch .formSwitch-label:after {
    opacity: 1;
}

.formSwitch-handle {
    position: absolute;
    top: 6px;
    left: 4px;
    width: 24px;
    height: 24px;
    background: linear-gradient(to bottom, #FFFFFF 40%, #f0f0f0);
    background-image: -webkit-linear-gradient(top, #FFFFFF 40%, #f0f0f0);
    border-radius: 100%;
    box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);
}

.formSwitch-handle:before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -6px 0 0 -6px;
    width: 12px;
    height: 12px;
    background: linear-gradient(to bottom, #eeeeee, #FFFFFF);
    background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF);
    border-radius: 6px;
    box-shadow: inset 0 1px rgba(0, 0, 0, 0.02);
}

.formSwitch-input:checked~.formSwitch .formSwitch-handle {
    left: 71px;
    box-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2);
}

.serviSizetab {
    border-bottom: 2px solid transparent;
    font-size: 16px;
    font-weight: 600;
    text-transform: uppercase;
}

.serviSizetab.active {
    border-bottom: 2px solid var(--primaryDark);
    font-weight: 700;
}

.foodTypeRadio:has(input[type="radio"]:checked) {
    background: var(--greenLight);
    border: 1px solid var(--primaryGreen);
    color: var(--secondary);
    font-weight: 500;
}

.dietaryRadio:has(input[type="radio"]:checked) {
    background: var(--primaryDark);
    color: #FFFFFF;
    font-weight: 500;
}

.daysCheckbox:has(input[type="checkbox"]:checked) {
    background: var(--primaryDark);
    color: #FFFFFF;
    font-weight: 500;
}

.css-t3ipsp-control {
    box-shadow: 0 0 0 1 var(--primaryDark) !important;
    border-color: var(--primaryDark) !important;
}

.css-t3ipsp-control:hover {
    border-color: var(--primaryDark) !important;
}

@media only screen and (max-width: 767px) {
    .user-mbl-table thead {
        display: none;
    }

    .user-mbl-table tbody td::before {
        content: attr(data-title);
        /* float: left; */
        padding-right: 10px;
        text-transform: uppercase;
        font-weight: 700;
        font-size: 16px;
        border-bottom: 1px solid var(--borderClr);
        display: block;
        margin-bottom: 14px;
    }

    .user-mbl-table tbody td {
        display: block;
    }

    .border-bottom {
        border-bottom: 1px solid #dee2e6 !important;
    }

    table.user-mbl-table td {
        padding: 15px 2px;
    }
}

.ReactModal__Content.ReactModal__Content--after-open[aria-label="MultiStepFormModal"] {
    inset: 0 !important;
    padding: 0 !important;
}

.ReactModal__Content.ReactModal__Content--after-open[aria-label="ServSizeModal"] {
    inset: 60px 350px !important;
}

@media screen and (max-width: 1024px) {
    .ReactModal__Content.ReactModal__Content--after-open[aria-label="ServSizeModal"] {
        inset: 10px 10px !important;
    }
}